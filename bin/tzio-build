#!/bin/bash
source "$(dirname "${BASH_SOURCE[0]}")/_resolve.sh"

readonly THIS_FILE=$(resolve_file ${BASH_SOURCE[0]})
readonly DIR=$(dirname $(dirname "$THIS_FILE"))

function find_compiler() {
  local DEBUG_BINARY=$DIR/rs-parser/target/debug/app
  if [ -f "$DEBUG_BINARY" ]
  then
    echo $DEBUG_BINARY
		return 0
  fi

  local RELEASE_BINARY=$DIR/rs-parser/target/release/app
  if [ -f "$RELEASE_BINARY" ]
  then
    echo $RELEASE_BINARY
		return 0
  fi

  echo -e "\e[31mCannot find binary. Maybe compile rs-parser\e[0m"
  return 2
}
readonly RUST_COMPILER=$(find_compiler)

function print_help() {
	cat <<HELP
Usage:
	$(basename $0) [--rust|--clj] <filename> [<output_dir>]

The default output directory is "$DIR/out"

Options:
	-h, --help: Prints this help message
	--rust: Use the rust compiler
	--clj: Use the Clojure compiler
HELP
	exit 0
}

compiler=
case $1 in
	-h|--help|help) print_help ;;
	--rust)
		compiler=$RUST_COMPILER
		shift 1 ;;
	*) compiler=$RUST_COMPILER ;;
esac

input_file=$1
output_dir=$2
[ -z "$output_dir" ] && output_dir="$DIR/out"
$compiler $input_file $output_dir